# given_string=input()
# rev_string=""
# for i in given_string:
#     rev_string=i+rev_string
# print(rev_string)
## program to find the length of a string without using len() function
# def my_string(string):
#     count=0
#     for i in string:
#          count+=1
#     return count
# len_string="manikanth"
# len=my_string(len_string)## calling a function here
# print(len)
import re

def split(string):
  pattern = r"\S+"  # Matches one or more non-whitespace characters
  return re.findall(pattern, string)

# Example usage
my_string = "This is a sentence to split"
words = split(my_string)
print("Split words (regex):", words)
def merge_sort(list1,list2):
    merged_list=[]
    i, j= 0, 0
    while i < len(list1) and j<len(list2):
        if list1[i] > list2[j]:
            merged_list.append(list1[i])
            i += 1
        else:
            merged_list.append(list2[j])
            j += 1
    while i < len(list1):
        merged_list.append(list1[i])
        i += 1
    while j < len(list2):
        merged_list.append(list2[j])
        j += 1
    return merged_list
list1=[1,3,5,7]
list2=[2,3,6,8]
print(merge_sort(list1,list2))
# def merge_sorted_lists(list1, list2):
#     # Initialize the merged list and pointers for both input lists
#     merged_list = []
#     i, j = 0, 0
#
#     # Traverse both lists and append the smaller element to the merged list
#     while i < len(list1) and j < len(list2):
#         if list1[i] < list2[j]:
#             merged_list.append(list1[i])
#             i += 1
# #         else:
#             merged_list.append(list2[j])
#             j += 1
#
#     # If there are remaining elements in list1, append them to the merged list
#     while i < len(list1):
#         merged_list.append(list1[i])
#         i += 1
#
#     # If there are remaining elements in list2, append them to the merged list
#     while j < len(list2):
#         merged_list.append(list2[j])
#         j += 1
#
#     return merged_list
#
#
# # Example usage:
# list1 = [1, 3, 5, 7]
# list2 = [2, 4, 6, 8]
# print(merge_sorted_lists(list1, list2))  # Output: [1, 2, 3, 4, 5, 6, 7, 8]

# def read_file_in_reverse(file_path):
#     with open(file_path, 'r') as file:
#         lines = file.readlines()
#
#     for line in reversed(lines):
#         print(line.strip())
#
#
# # Example usage:
# file_path = 'C:\\Users\\GOLLA SRINIVAS\\PycharmProjects\\pythonProject1\\source.txt'
# read_file_in_reverse(file_path)

# def fibnacii(n):
#     if n<=0:
#         return[0]
#     elif n==1:
#         return[1]
#     elif n==2:
#         return[0,1]
#     fibnacci_series=[0,1]
#     for i in range(2,n):
#         next=fibnacci_series[-1]+fibnacci_series[-2]
#         fibnacci_series.append(next)
#     return fibnacci_series
# n=10
# print(fibnacii(n))
# x=10
# y=20
# x,y=y,x
# print(x)
# print(y)
## removing a punctutation

import string

def remove_punctuation(input_string):
    cleaned_string = ""
    for char in input_string:
        if char not in string.punctuation:
            cleaned_string += char
    return cleaned_string

# Example usage:
input_string = "Hello, world! This is a test-string."
cleaned_string = remove_punctuation(input_string)
print(cleaned_string)  # Output: "Hello world This is a teststring"
 